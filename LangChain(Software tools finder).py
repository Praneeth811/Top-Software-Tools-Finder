# -*- coding: utf-8 -*-
"""LC.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ostsYrjOPl3Kk8B445OsGl64EiYx6bEw
"""

!wget -O /content/tinyllama-1.1b-chat.gguf "https://huggingface.co/TheBloke/TinyLlama-1.1B-Chat-v1.0-GGUF/resolve/main/tinyllama-1.1b-chat-v1.0.Q4_K_M.gguf"

pip install langchain langchain-community llama-cpp-python

import gradio as gr

import gradio as gr
from langchain.llms import LlamaCpp
from langchain import PromptTemplate, LLMChain

MODEL_PATH = "/content/tinyllama-1.1b-chat.gguf"

llm = LlamaCpp(
    model_path=MODEL_PATH,
    n_ctx=1024,
    n_threads=4,
    temperature=0.7,
    max_tokens=512,
    chat_format="llama-2"
)

# Updated prompt to include use case input
prompt_template = """
You are an expert software analyst. Given the software type and a specific use case below, list the top 3 tools ranked by popularity that best fit the use case. For each tool, provide a brief, clear description (1-2 sentences) without repeating the tool name or previous descriptions.

Software type: {software_type}
Use case: {use_case}

Output format:
1. Tool Name - Description
2. Tool Name - Description
3. Tool Name - Description
"""

prompt = PromptTemplate(input_variables=["software_type", "use_case"], template=prompt_template)
chain = LLMChain(llm=llm, prompt=prompt)

def get_top_tools(software_type: str, use_case: str) -> str:
    result = chain.run(software_type=software_type, use_case=use_case).strip()
    lines = [line.strip() for line in result.split("\n") if line.strip()]
    unique_lines = []
    seen_tools = set()
    for line in lines:
        if len(unique_lines) >= 3:
            break
        if " - " in line:
            tool = line.split(" - ")[0].split(". ", 1)[-1].strip()
            if tool.lower() not in seen_tools:
                unique_lines.append(line)
                seen_tools.add(tool.lower())
    return "\n".join(unique_lines)

# Gradio interface with two inputs
iface = gr.Interface(
    fn=get_top_tools,
    inputs=[
        gr.Textbox(lines=1, placeholder="Enter software type (e.g., ERP)", label="Software Type"),
        gr.Textbox(lines=2, placeholder="Enter your specific use case (e.g., managing remote teams)", label="Use Case"),
    ],
    outputs=gr.Textbox(lines=10, label="Top 3 Tools with Descriptions"),
    title="Top Software Tools Finder with Use Case",
    description="Enter a software type and your specific use case to get the top 3 ranked tools with brief descriptions tailored to your needs.",
    theme="compact"
)

iface.launch()

